function y = PDI(x)  

     % --------------------------------------------------------------------
     % Passo 1 - Redimensionamento e conversão para escala de cinza
     x = imresize(x, [150 150]);
     x = rgb2gray(x);
     y = x;
     % --------------------------------------------------------------------
     
     % --------------------------------------------------------------------
     % Passo 2 - Limiarização
     y = uint8(y > 10).*x;
     y = uint8(y < 125).*x;
     % --------------------------------------------------------------------

     
     % --------------------------------------------------------------------
     % Passo 3 - Filtragem
     n = 25;
     mask = 1/(n*n) * ones(n,n);
     y = imfilter(y, mask);
     y = round(y/1.3);
     
     y = otsu(y) .* x; % 70/30 = 84% de acerto 
     % --------------------------------------------------------------------

%      % --------------------------------------------------------------------
%      % Passo 4 - Filtro Edge + Canny
%      y1 = uint8(edge(y,'canny'));
%      n = 4;
%      mask = 1/(n*n) * ones(n,n);
%      y1 = imfilter(y1, mask);
%      y(logical(y1)) = 0;
%      % --------------------------------------------------------------------
%     
%      % --------------------------------------------------------------------
%      % Passo 5 - Filtragem
%      n = 25;
%      mask = 1/(n*n) * ones(n,n);
%      y = imfilter(y, mask);
%      y = round(y/1.3);
%      % --------------------------------------------------------------------
% 
%      % --------------------------------------------------------------------
%      % Passo 6 - Filtragem
%      n = 5;
%      mask = 1/(n*n) * ones(n,n);
%      y = imfilter(y, mask);
%      % --------------------------------------------------------------------
% 
%      % --------------------------------------------------------------------
%      % Passo 7 - Filtragem
%      n = 2;
%      mask = 1/(n*n) * ones(n,n);
%      y = imfilter(y, mask);
%      % --------------------------------------------------------------------
% 
%      % --------------------------------------------------------------------
     % Passo 8 - Imagem resultante
       y =  SIMPLES(y);
%      % --------------------------------------------------------------------
end

function [y] =  SIMPLES(x)
    y = (reshape(x,[size(x,1)*size(x,2),1]));
end